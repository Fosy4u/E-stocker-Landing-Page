{"ast":null,"code":"import _regeneratorRuntime from \"/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport var Collider = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Collider, _ParticlesInteractorB);\n\n  var _super = _createSuper(Collider);\n\n  function Collider(container) {\n    _classCallCheck(this, Collider);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Collider, [{\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(p1) {\n        var container, pos1, radius1, query, _iterator, _step, p2, pos2, radius2, dist, distP;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n                _iterator = _createForOfIteratorHelper(query);\n                _context.prev = 2;\n\n                _iterator.s();\n\n              case 4:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 19;\n                  break;\n                }\n\n                p2 = _step.value;\n\n                if (!(p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 17);\n\n              case 8:\n                pos2 = p2.getPosition();\n                radius2 = p2.getRadius();\n\n                if (!(Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 17);\n\n              case 12:\n                dist = getDistance(pos1, pos2);\n                distP = radius1 + radius2;\n\n                if (!(dist > distP)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 17);\n\n              case 16:\n                resolveCollision(p1, p2, container.fpsLimit / 1000, container.retina.pixelRatio);\n\n              case 17:\n                _context.next = 4;\n                break;\n\n              case 19:\n                _context.next = 24;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](2);\n\n                _iterator.e(_context.t0);\n\n              case 24:\n                _context.prev = 24;\n\n                _iterator.f();\n\n                return _context.finish(24);\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 21, 24, 27]]);\n      }));\n\n      function interact(_x) {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.collisions.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }]);\n\n  return Collider;\n}(ParticlesInteractorBase);","map":{"version":3,"sources":["/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js"],"names":["ParticlesInteractorBase","getDistance","resolveCollision","Collider","container","p1","pos1","getPosition","radius1","getRadius","query","particles","quadTree","queryCircle","p2","options","collisions","enable","mode","destroyed","spawning","pos2","radius2","Math","abs","round","z","dist","distP","fpsLimit","retina","pixelRatio","particle"],"mappings":";;;;;;;AAAA,SAASA,uBAAT,EAAkCC,WAAlC,QAAqD,oBAArD;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,WAAaC,QAAb;AAAA;;AAAA;;AACI,oBAAYC,SAAZ,EAAuB;AAAA;;AAAA,6BACbA,SADa;AAEtB;;AAHL;AAAA;AAAA,4BAIY,CACP;AALL;AAAA;AAAA,2BAMW,CACN;AAPL;AAAA;AAAA;AAAA,gGAQmBC,EARnB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAScD,gBAAAA,SATd,GAS0B,KAAKA,SAT/B,EAS0CE,IAT1C,GASiDD,EAAE,CAACE,WAAH,EATjD,EASmEC,OATnE,GAS6EH,EAAE,CAACI,SAAH,EAT7E,EAS6FC,KAT7F,GASqGN,SAAS,CAACO,SAAV,CAAoBC,QAApB,CAA6BC,WAA7B,CAAyCP,IAAzC,EAA+CE,OAAO,GAAG,CAAzD,CATrG;AAAA,uDAUyBE,KAVzB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUmBI,gBAAAA,EAVnB;;AAAA,sBAWgBT,EAAE,KAAKS,EAAP,IACA,CAACA,EAAE,CAACC,OAAH,CAAWC,UAAX,CAAsBC,MADvB,IAEAZ,EAAE,CAACU,OAAH,CAAWC,UAAX,CAAsBE,IAAtB,KAA+BJ,EAAE,CAACC,OAAH,CAAWC,UAAX,CAAsBE,IAFrD,IAGAJ,EAAE,CAACK,SAHH,IAIAL,EAAE,CAACM,QAfnB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAkBkBC,gBAAAA,IAlBlB,GAkByBP,EAAE,CAACP,WAAH,EAlBzB;AAmBkBe,gBAAAA,OAnBlB,GAmB4BR,EAAE,CAACL,SAAH,EAnB5B;;AAAA,sBAoBgBc,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWnB,IAAI,CAACoB,CAAhB,IAAqBH,IAAI,CAACE,KAAL,CAAWJ,IAAI,CAACK,CAAhB,CAA9B,IAAoDlB,OAAO,GAAGc,OApB9E;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAuBkBK,gBAAAA,IAvBlB,GAuByB1B,WAAW,CAACK,IAAD,EAAOe,IAAP,CAvBpC;AAwBkBO,gBAAAA,KAxBlB,GAwB0BpB,OAAO,GAAGc,OAxBpC;;AAAA,sBAyBgBK,IAAI,GAAGC,KAzBvB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA4BY1B,gBAAAA,gBAAgB,CAACG,EAAD,EAAKS,EAAL,EAASV,SAAS,CAACyB,QAAV,GAAqB,IAA9B,EAAoCzB,SAAS,CAAC0B,MAAV,CAAiBC,UAArD,CAAhB;;AA5BZ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BA+BcC,QA/Bd,EA+BwB;AAChB,aAAOA,QAAQ,CAACjB,OAAT,CAAiBC,UAAjB,CAA4BC,MAAnC;AACH;AAjCL;AAAA;AAAA,4BAkCY,CACP;AAnCL;;AAAA;AAAA,EAA8BjB,uBAA9B","sourcesContent":["import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2);\n            const distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, container.fpsLimit / 1000, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n"]},"metadata":{},"sourceType":"module"}