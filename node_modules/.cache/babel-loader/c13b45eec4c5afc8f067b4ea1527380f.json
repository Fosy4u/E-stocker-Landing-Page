{"ast":null,"code":"import _classCallCheck from \"/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var Vector = /*#__PURE__*/function () {\n  function Vector(xOrCoords, y) {\n    _classCallCheck(this, Vector);\n\n    if (typeof xOrCoords !== \"number\" && xOrCoords) {\n      this.x = xOrCoords.x;\n      this.y = xOrCoords.y;\n    } else if (xOrCoords !== undefined && y !== undefined) {\n      this.x = xOrCoords;\n      this.y = y;\n    } else {\n      throw new Error(\"tsParticles - Vector not initialized correctly\");\n    }\n  }\n\n  _createClass(Vector, [{\n    key: \"add\",\n    value: function add(v) {\n      return Vector.create(this.x + v.x, this.y + v.y);\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(v) {\n      this.x += v.x;\n      this.y += v.y;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Vector.clone(this);\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return this.sub(v).length;\n    }\n  }, {\n    key: \"distanceToSq\",\n    value: function distanceToSq(v) {\n      return this.sub(v).getLengthSq();\n    }\n  }, {\n    key: \"div\",\n    value: function div(n) {\n      return Vector.create(this.x / n, this.y / n);\n    }\n  }, {\n    key: \"divTo\",\n    value: function divTo(n) {\n      this.x /= n;\n      this.y /= n;\n    }\n  }, {\n    key: \"getLengthSq\",\n    value: function getLengthSq() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n  }, {\n    key: \"manhattanDistanceTo\",\n    value: function manhattanDistanceTo(v) {\n      return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n  }, {\n    key: \"mult\",\n    value: function mult(n) {\n      return Vector.create(this.x * n, this.y * n);\n    }\n  }, {\n    key: \"multTo\",\n    value: function multTo(n) {\n      this.x *= n;\n      this.y *= n;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(v) {\n      this.x = v.x;\n      this.y = v.y;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      return Vector.create(this.x - v.x, this.y - v.y);\n    }\n  }, {\n    key: \"subFrom\",\n    value: function subFrom(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n    }\n  }, {\n    key: \"updateFromAngle\",\n    value: function updateFromAngle(angle, length) {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    }\n  }, {\n    key: \"angle\",\n    get: function get() {\n      return Math.atan2(this.y, this.x);\n    },\n    set: function set(angle) {\n      this.updateFromAngle(angle, this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return Math.sqrt(this.getLengthSq());\n    },\n    set: function set(length) {\n      this.updateFromAngle(this.angle, length);\n    }\n  }], [{\n    key: \"clone\",\n    value: function clone(source) {\n      return Vector.create(source.x, source.y);\n    }\n  }, {\n    key: \"create\",\n    value: function create(x, y) {\n      return new Vector(x, y);\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      return Vector.create(0, 0);\n    }\n  }]);\n\n  return Vector;\n}();","map":{"version":3,"sources":["/Users/fosterogwudu/Documents/My Projects/SAAS/SAAS/landing-pages/E-stocker-Landing-Page/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js"],"names":["Vector","xOrCoords","y","x","undefined","Error","v","create","clone","sub","length","getLengthSq","n","Math","abs","angle","cos","sin","atan2","updateFromAngle","sqrt","source"],"mappings":"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","sourcesContent":["export class Vector {\n    constructor(xOrCoords, y) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    setTo(v) {\n        this.x = v.x;\n        this.y = v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}